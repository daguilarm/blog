<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Blog de Damián Aguilar</title>
    <link href="https://www.daguilar.dev" />
    <link type="application/atom+xml" rel="self" href="https://www.daguilar.dev/blog/feed.atom" />
    <updated>2019-12-22T14:59:05+00:00</updated>
    <id>https://www.daguilar.dev/blog/feed.atom</id>
    <author>
        <name>Damián Aguilar</name>
    </author>
                <entry>
    <id>https://www.daguilar.dev/blog/servers_sistemas-de-gestion-de-servidores</id>
    <link type="text/html" rel="alternate" href="https://www.daguilar.dev/blog/servers_sistemas-de-gestion-de-servidores" />
    <title>Sistemas de gestión de servidores</title>
    <published>2019-12-21T00:00:00+00:00</published>
    <updated>2019-12-21T00:00:00+00:00</updated>
    <author>
        <name>Damián Aguilar</name>
    </author>
    <summary type="html">El objectivo de este artículo es el de mantener una lista (actualizada) de los principales sistemas de gestión de servidores. 
Los servicios analizados (22/12/2019) son:

Laravel forge
Moss
Runcloud
ServerPilot





Servicio
SSL gratis
Bases datos......</summary>
    <content type="html"><![CDATA[
        <p>El objectivo de este artículo es el de mantener una lista (actualizada) de los principales sistemas de gestión de servidores. </p>
<p>Los servicios analizados (22/12/2019) son:</p>
<ul>
<li><a href="https://forge.laravel.com/" class="link-out">Laravel forge</a></li>
<li><a href="https://moss.sh/" class="link-out">Moss</a></li>
<li><a href="https://runcloud.io/" class="link-out">Runcloud</a></li>
<li><a href="https://serverpilot.io/" class="link-out">ServerPilot</a></li>
</ul>
<h3> Sus características</h3>
<table>
<thead>
<tr>
<th style="text-align: left;">Servicio</th>
<th style="text-align: left;">SSL gratis</th>
<th style="text-align: left;">Bases datos</th>
<th style="text-align: left;">Workers</th>
<th style="text-align: left;">Supervisor</th>
<th style="text-align: left;">Redis</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;">Forge</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
</tr>
<tr>
<td style="text-align: left;">Moss</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
</tr>
<tr>
<td style="text-align: left;">Runcloud</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">--</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
</tr>
<tr>
<td style="text-align: left;">ServerP</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">--</td>
<td style="text-align: left;">--</td>
<td style="text-align: left;">--</td>
</tr>
</tbody>
</table>
<h3> Tipo de plan</h3>
<table>
<thead>
<tr>
<th style="text-align: left;">Servicio</th>
<th style="text-align: left;">Plan grauito</th>
<th style="text-align: left;">Planes de pago (mes)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;">Forge</td>
<td style="text-align: left;">5 días prueba</td>
<td style="text-align: left;">9$    - 19$   - 49$</td>
</tr>
<tr>
<td style="text-align: left;">Moss</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">12$   - 19$   - 39$</td>
</tr>
<tr>
<td style="text-align: left;">Runcloud</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">6.67$ - 12.5$ - 37.5$</td>
</tr>
<tr>
<td style="text-align: left;">ServerP(*)</td>
<td style="text-align: left;">Modo de prueba</td>
<td style="text-align: left;">5$    - 10$   - 20$</td>
</tr>
</tbody>
</table>
<p>(*) Tienen un coste adicional por cada aplicación configurada.</p>
<h3> Servicios de deploy</h3>
<table>
<thead>
<tr>
<th style="text-align: left;">Servicio</th>
<th style="text-align: left;">Github</th>
<th style="text-align: left;">Bitbucket</th>
<th style="text-align: left;">GitLab</th>
<th style="text-align: left;">Custom Git</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;">Forge</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
</tr>
<tr>
<td style="text-align: left;">Moss</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
</tr>
<tr>
<td style="text-align: left;">Runcloud</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
</tr>
<tr>
<td style="text-align: left;">ServerP</td>
<td style="text-align: left;">--</td>
<td style="text-align: left;">--</td>
<td style="text-align: left;">--</td>
<td style="text-align: left;">--</td>
</tr>
</tbody>
</table>
<h3> Servidores soportados</h3>
<table>
<thead>
<tr>
<th style="text-align: left;">Servicio</th>
<th style="text-align: left;">Digital(*)</th>
<th style="text-align: left;">Linode</th>
<th style="text-align: left;">Amazon</th>
<th style="text-align: left;">Vultr</th>
<th style="text-align: left;">Upcloud</th>
<th style="text-align: left;">Google</th>
<th style="text-align: left;">Custom</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;">Forge</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">--</td>
<td style="text-align: left;">--</td>
<td style="text-align: left;">Si</td>
</tr>
<tr>
<td style="text-align: left;">Moss</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">--</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
</tr>
<tr>
<td style="text-align: left;">Runcloud</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">--</td>
<td style="text-align: left;">--</td>
<td style="text-align: left;">--</td>
<td style="text-align: left;">--</td>
<td style="text-align: left;">--</td>
</tr>
<tr>
<td style="text-align: left;">ServerP</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">Si</td>
<td style="text-align: left;">--</td>
<td style="text-align: left;">--</td>
<td style="text-align: left;">Si</td>
</tr>
</tbody>
</table>
<p>(*)Digitalocean</p>
<blockquote>
<p>Si conoces y has utilizado más servicios para la gestión de servidores, ves algún error, o falta algo... hazmelo saber!</p>
</blockquote>    ]]></content>
</entry>
            <entry>
    <id>https://www.daguilar.dev/blog/html_componentes-avanzados-de-una-plantilla-html5</id>
    <link type="text/html" rel="alternate" href="https://www.daguilar.dev/blog/html_componentes-avanzados-de-una-plantilla-html5" />
    <title>Creando una plantilla HTML5 avanzada</title>
    <published>2019-12-20T00:00:00+00:00</published>
    <updated>2019-12-20T00:00:00+00:00</updated>
    <author>
        <name>Damián Aguilar</name>
    </author>
    <summary type="html">Una plantilla básica HTML5, tendría el siguiente aspecto


Lo primero será añadir las meta-etiquetas description y keywords en el &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; del documento &lt;code&gt;HTML&lt;/code&gt;:

Seguido de la etiqueta theme-color, utilizada por los......</summary>
    <content type="html"><![CDATA[
        <p>Una plantilla básica HTML5, tendría el siguiente aspecto</p>
<pre><code class="language-html">&lt;!DOCTYPE html&gt;
&lt;html lang="es"&gt;
  &lt;head&gt;
    &lt;meta charset="utf-8" /&gt;
    &lt;meta http-equiv="x-ua-compatible" content="ie=edge" /&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1" /&gt;

    &lt;title&gt;&lt;/title&gt;

    &lt;link rel="stylesheet" href="css/main.css" /&gt;
    &lt;link rel="icon" href="images/favicon.png" /&gt;
  &lt;/head&gt;

  &lt;body&gt;
    &lt;script src="js/scripts.js"&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;</code></pre>
<h2>Meta-etiquetas</h2>
<p>Lo primero será añadir las meta-etiquetas <em>description</em> y <em>keywords</em> en el <code>&lt;head&gt;</code> del documento <code>HTML</code>:</p>
<pre><code class="language-html">&lt;meta name="description" content=""&gt;
&lt;meta name="keywords" content=""&gt;</code></pre>
<p>Seguido de la etiqueta <em>theme-color</em>, utilizada por los dispositivos <strong>Android</strong> para definir el color base:</p>
<pre><code class="language-html">&lt;meta name="theme-color" content="#fafafa"&gt;</code></pre>
<p>Si utilizamos <strong>Laravel</strong>:</p>
<pre><code class="language-html">&lt;meta name="csrf-token" content="{{ csrf_token() }}"&gt;</code></pre>
<p>Y toda una seríe de configuraciones por defecto:</p>
<pre><code class="language-html">&lt;meta name="copyright"content="Your name or company name"&gt;
&lt;meta name="language" content="Your language"&gt;
&lt;meta name="url" content="Your URL"&gt;
&lt;meta name="identifier-URL" content="Your URL"&gt;
&lt;meta name="directory" content="submission"&gt;
&lt;meta name="category" content=""&gt;
&lt;meta name="robots" content="index, follow"&gt;
&lt;meta name="coverage" content="Worldwide"&gt;
&lt;meta name="distribution" content="Global"&gt;
&lt;meta name="rating" content="General"&gt;
&lt;meta name="revisit-after" content="7 days"&gt;
&lt;meta http-equiv="Expires" content="0"&gt;
&lt;meta http-equiv="Pragma" content="no-cache"&gt;
&lt;meta http-equiv="Cache-Control" content="no-cache"&gt;
&lt;meta name="revised" content="Sunday, July 18th, 2010, 5:15 pm" /&gt;</code></pre>
<p>También podemos añadir etiquetas personalizadas de algunos servicios:</p>
<pre><code class="language-html">&lt;!-- Custom tags --&gt;
&lt;meta name="google-analytics" content=""/&gt;
&lt;meta name="disqus" content=""/&gt;</code></pre>
<p>Nuestros iconos:</p>
<pre><code class="language-html">&lt;!-- Icons --&gt;
&lt;link rel="shortcut icon" href="/favicons/favicon.ico"&gt;
&lt;link rel="icon" type="image/png" sizes="32x32" href="/favicons/favicon-32x32.png"&gt;
&lt;link rel="icon" type="image/png" sizes="16x16" href="/favicons/favicon-16x16.png"&gt;</code></pre>
<p>Las etiquetas para dispositivos <em>Apple</em>:</p>
<pre><code class="language-html">&lt;!-- Apple --&gt;
&lt;meta name="apple-mobile-web-app-capable" content="yes"&gt;
&lt;meta content="yes" name="apple-touch-fullscreen" /&gt;
&lt;meta name="apple-mobile-web-app-status-bar-style" content="black"&gt;
&lt;meta name="format-detection" content="telephone=no"&gt;
&lt;meta name="apple-mobile-web-app-title" content="My Site"&gt;
&lt;link rel="apple-touch-icon" sizes="180x180" href="/favicons/apple-touch-icon.png"&gt;
&lt;link rel="mask-icon" href="/favicons/safari-pinned-tab.svg" color="grey"&gt;</code></pre>
<p>Las etiquetas de microsoft </p>
<pre><code class="language-html">&lt;!-- Microsoft --&gt;
&lt;meta name="msapplication-TileColor" content="grey"&gt;
&lt;meta name="msapplication-config" content="/favicons/browserconfig.xml"&gt;</code></pre>
<p>Un ejemplo del <code>browserconfig.xml</code>:</p>
<pre><code class="language-bash">&lt;? xml version = "1.0" encoding = "utf-8" ?&gt;
  &lt;browserconfig&gt;
    &lt;msapplication&gt;
      &lt;tile&gt;
        &lt;square150x150logo src="/favicons/mstile-150x150.png" /&gt;
        &lt;TileColor&gt;grey&lt;/TileColor&gt;
      &lt;/tile&gt;
    &lt;/msapplication&gt;
  &lt;/browserconfig&gt;</code></pre>
<p>Incluye un <code>manifest</code> y la etiqueta <code>application-name</code> entre tus metatags:</p>
<pre><code class="language-html">&lt;link rel="manifest" href="site.webmanifest"&gt;
&lt;meta name="application-name" content="My Site"&gt;</code></pre>
<p>Un ejemplo del <code>site.webmanifest</code>:</p>
<pre><code class="language-javascript">{
  "name": "My Website",
  "short_name": "My Site",
  "icons": [
    {
      "src": "/favicons/android-chrome-192x192.png",
      "sizes": "192x192",
      "type": "image/png"
    },
    {
      "src": "/favicons/android-chrome-384x384.png",
      "sizes": "384x384",
      "type": "image/png"
    }
  ],
  "theme_color": "#ffffff",
  "background_color": "#ffffff"
}</code></pre>
<h2>Librerías externas css y fuentes</h2>
<p>Si vamos a utilizar <a href="https://fonts.google.com" class="link-out">Google fonts</a> o librerías externas <strong>CSS</strong>, es buena idea utilizar:</p>
<pre><code class="language-html">&lt;link rel="dns-prefetch" href="//fonts.googleapis.com"&gt;
&lt;link rel="preconnect" href="//fonts.googleapis.com" crossorigin&gt;
&lt;link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,800,800i,900,900i" rel="stylesheet" media="all"&gt;</code></pre>
<ul>
<li><strong>dns-prefetch</strong>: notifica al navegador que debería resolver el DNS de un dominio específico antes de que este sea llamado explícitamente.</li>
<li><strong>preconnect</strong>: informa al navegador que vamos a establecer una conexión con un dominio externo, y que queremos hacerlo lo antes posible.</li>
</ul>
<h2>Body</h2>
<p>Idiquemos que no se soportan navegadores prehistóricos:</p>
<pre><code class="language-html">&lt;!--[if IE]&gt;
    &lt;p style="padding:5px; margin: 5px; border: 1px solid red;"&gt;You are using an &lt;strong&gt;outdated&lt;/strong&gt; browser. Please &lt;a href="https://browsehappy.com/"&gt;upgrade your browser&lt;/a&gt; to improve your experience and security.&lt;/p&gt;
&lt;![endif]--&gt;</code></pre>
<p>Añadamos las etiquetas básicas para crear el cuerpo de nuestra plantilla:</p>
<pre><code class="language-html">&lt;header&gt;
    &lt;!-- My header code --&gt;
&lt;/header&gt;

    &lt;div id="app"&gt;
        &lt;!-- My application code --&gt;
    &lt;/div&gt;

&lt;footer&gt;
    &lt;!-- My footer code --&gt;
&lt;/footer&gt;</code></pre>
<p>Pongamos el código <code>javascript</code> al final del código, y si vamos a utilizar librerías como por ejemplo: <strong>Jquery</strong>, utilicemos un CDN usando la misma técnica que con las <strong>Google Fonts</strong>:</p>
<pre><code class="language-html">&lt;!-- Javascript code --&gt;
&lt;link rel="dns-prefetch" href="//code.jquery.com"&gt;
&lt;link rel="preconnect" href="//code.jquery.com" crossorigin&gt;
&lt;script src="https://code.jquery.com/jquery-{{JQUERY_VERSION}}.min.js" integrity="{{JQUERY_SRI_HASH}}" crossorigin="anonymous"&gt;&lt;/script&gt;</code></pre>
<p>Si queremos usar el código de google-analytics:</p>
<pre><code class="language-html">&lt;!-- Google Analytics: change UA-XXXXX-Y to be your site's ID. --&gt;
&lt;script&gt;
window.ga = function () { ga.q.push(arguments) }; ga.q = []; ga.l = +new Date;
ga('create', 'UA-XXXXX-Y', 'auto'); ga('set','transport','beacon'); ga('send', 'pageview')
&lt;/script&gt;
&lt;script src="https://www.google-analytics.com/analytics.js" async&gt;&lt;/script&gt;</code></pre>
<h2>Resumen</h2>
<p>Poniendo todo lo anterior junto:</p>
<pre><code class="language-html">&lt;!DOCTYPE html&gt;
&lt;html lang="es"&gt;
  &lt;head&gt;
    &lt;meta charset="utf-8" /&gt;
    &lt;meta http-equiv="x-ua-compatible" content="ie=edge" /&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1" /&gt;
    &lt;meta name="theme-color" content="#ffffff"&gt;

    &lt;!-- Only with Laravel --&gt;
    &lt;meta name="csrf-token" content="{{ csrf_token() }}"&gt;
    &lt;!-- Only with Laravel --&gt;

    &lt;meta name="robots" content="index, follow"&gt;
    &lt;meta name="copyright"content=""&gt;
    &lt;meta name="language" content=""&gt;
    &lt;meta name="url" content=""&gt;
    &lt;meta name="identifier-URL" content=""&gt;
    &lt;meta name="directory" content="submission"&gt;
    &lt;meta name="category" content=""&gt;
    &lt;meta name="coverage" content="Worldwide"&gt;
    &lt;meta name="distribution" content="Global"&gt;
    &lt;meta name="rating" content="General"&gt;
    &lt;meta name="revisit-after" content="7 days"&gt;
    &lt;meta http-equiv="Expires" content="0"&gt;
    &lt;meta http-equiv="Pragma" content="no-cache"&gt;
    &lt;meta http-equiv="Cache-Control" content="no-cache"&gt;
    &lt;meta name="revised" content="Sunday, July 18th, 2010, 5:15 pm" /&gt;

    &lt;!-- Icons --&gt;
    &lt;link rel="shortcut icon" href="/favicons/favicon.ico"&gt;
    &lt;link rel="icon" type="image/png" sizes="32x32" href="/favicons/favicon-32x32.png"&gt;
    &lt;link rel="icon" type="image/png" sizes="16x16" href="/favicons/favicon-16x16.png"&gt;

    &lt;!-- Apple --&gt;
    &lt;meta name="apple-mobile-web-app-capable" content="yes"&gt;
    &lt;meta content="yes" name="apple-touch-fullscreen" /&gt;
    &lt;meta name="apple-mobile-web-app-status-bar-style" content="black"&gt;
    &lt;meta name="format-detection" content="telephone=no"&gt;
    &lt;meta name="apple-mobile-web-app-title" content="My Site"&gt;
    &lt;link rel="apple-touch-icon" sizes="180x180" href="/favicons/apple-touch-icon.png"&gt;
    &lt;link rel="mask-icon" href="/favicons/safari-pinned-tab.svg" color="grey"&gt;

    &lt;!-- Microsoft --&gt;
    &lt;meta name="msapplication-TileColor" content="grey"&gt;
    &lt;meta name="msapplication-config" content="/favicons/browserconfig.xml"&gt;

    &lt;!-- Site information --&gt;
    &lt;title&gt;&lt;/title&gt;
    &lt;meta name="description" content=""&gt;
    &lt;meta name="keywords" content=""&gt;

    &lt;!-- Load external CDN --&gt;
    &lt;link rel="dns-prefetch" href="//fonts.googleapis.com"&gt;
    &lt;link rel="preconnect" href="//fonts.googleapis.com" crossorigin&gt;
    &lt;link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,800,800i,900,900i" rel="stylesheet" media="all"&gt;

    &lt;link rel="stylesheet" href="css/main.css" /&gt;
    &lt;link rel="icon" href="images/favicon.png" /&gt;

    &lt;link rel="manifest" href="site.webmanifest"&gt;
    &lt;meta name="application-name" content=""&gt;

  &lt;/head&gt;

  &lt;body&gt;
    &lt;!--[if IE]&gt;
        &lt;p style="padding:5px; margin: 5px; border: 1px solid red;"&gt;You are using an &lt;strong&gt;outdated&lt;/strong&gt; browser. Please &lt;a href="https://browsehappy.com/"&gt;upgrade your browser&lt;/a&gt; to improve your experience and security.&lt;/p&gt;
    &lt;![endif]--&gt;
    &lt;header&gt;
        &lt;!-- My header code --&gt;
    &lt;/header&gt;

        &lt;div id="app"&gt;
            &lt;!-- My application code --&gt;
        &lt;/div&gt;

    &lt;footer&gt;
        &lt;!-- My footer code --&gt;
    &lt;/footer&gt;

    &lt;!-- Javascript code --&gt;
    &lt;link rel="dns-prefetch" href="//code.jquery.com"&gt;
    &lt;link rel="preconnect" href="//code.jquery.com" crossorigin&gt;
    &lt;script src="https://code.jquery.com/jquery-{{JQUERY_VERSION}}.min.js" integrity="{{JQUERY_SRI_HASH}}" crossorigin="anonymous"&gt;&lt;/script&gt;
    &lt;script src="js/scripts.js"&gt;&lt;/script&gt;

    &lt;!-- Google Analytics: change UA-XXXXX-Y to be your site's ID. --&gt;
    &lt;script&gt;
    window.ga = function () { ga.q.push(arguments) }; ga.q = []; ga.l = +new Date;
    ga('create', 'UA-XXXXX-Y', 'auto'); ga('set','transport','beacon'); ga('send', 'pageview')
    &lt;/script&gt;
    &lt;script src="https://www.google-analytics.com/analytics.js" async&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;</code></pre>
<p>Mas información:</p>
<ul>
<li><a href="https://html5boilerplate.com/">https://html5boilerplate.com/</a></li>
<li><a href="http://www.initializr.com/">http://www.initializr.com/</a></li>
<li><a href="https://developers.google.com/web/fundamentals/performance/resource-prioritization?hl=es">https://developers.google.com/web/fundamentals/performance/resource-prioritization?hl=es</a></li>
<li><a href="https://developers.google.com/web/updates/2015/08/using-manifest-to-set-sitewide-theme-color">https://developers.google.com/web/updates/2015/08/using-manifest-to-set-sitewide-theme-color</a></li>
<li><a href="https://www.chromium.org/developers/design-documents/dns-prefetching">https://www.chromium.org/developers/design-documents/dns-prefetching</a></li>
</ul>    ]]></content>
</entry>
            <entry>
    <id>https://www.daguilar.dev/blog/packages_configurar-github-webhooks-para-packagist</id>
    <link type="text/html" rel="alternate" href="https://www.daguilar.dev/blog/packages_configurar-github-webhooks-para-packagist" />
    <title>Configurar Github webhooks con Packagist</title>
    <published>2019-12-16T00:00:00+00:00</published>
    <updated>2019-12-16T00:00:00+00:00</updated>
    <author>
        <name>Damián Aguilar</name>
    </author>
    <summary type="html">Crear un package con Laravel, subirlo a Github y publicarlo en Packagist, es bastante sencillo, el problema suele venir cuando intentamos que que se sincronicen entre ellos.
El primer aviso, lo dará Packagist, informando que tenemos que ir a Github y......</summary>
    <content type="html"><![CDATA[
        <p>Crear un package con <strong><a href="https://laravel.com/" class="link-out">Laravel</a></strong>, subirlo a <strong><a href="https://github.com/" class="link-out">Github</a></strong> y publicarlo en <strong><a href="https://packagist.org/" class="link-out">Packagist</a></strong>, es bastante sencillo, el problema suele venir cuando intentamos que que se sincronicen entre ellos.</p>
<p>El primer aviso, lo dará <strong>Packagist</strong>, informando que tenemos que ir a <strong>Github</strong> y activar los <em>webhooks</em>, para que se actualice automáticamente, por lo que nuestro primer paso será ese: ir a <strong>Github</strong>.</p>
<p>Debemos entrar en nuestro repositorio, ir a <code>settings</code> y pulsar en <em>webhooks</em>. Básicamente, sería lo mismo que:</p>
<pre><code>https://github.com/github-username/my-repository-name/settings/hooks</code></pre>
<p>Si ya existe un <em>webhook</em> hacia <strong>Packagist</strong> lo editamos, y si no, lo creamos.</p>
<p><img src="../../../assets/img/posts/github-webhooks-1.png" alt="Github webhooks" class="thumbnail" /></p>
<p>Debemos rellenar los campos como se describe a continuación:</p>
<p><img src="../../../assets/img/posts/github-webhooks-2.png" alt="Github webhooks" class="thumbnail" /></p>
<ul>
<li><strong>Payload URL</strong>: <a href="https://packagist.org/api/update-package?username=USERNAME">https://packagist.org/api/update-package?username=USERNAME</a> (usando el USERNAME de <strong>Packagist</strong>).</li>
<li><strong>Content type</strong>: seleccionamos <em>application/json</em>.</li>
<li><strong>Secret</strong>: es nuestra API KEY de <strong>Packagist</strong>. Vamos a <code>profile &gt; show API Token</code> y añadimos este valor al campo de <strong>Github</strong>. </li>
<li><strong>SSL verification</strong>: activamos <em>Enable SSL verification</em>.</li>
<li><strong>Which events would you like to trigger this webhook?</strong>: seleccionamos <em>Just the push event</em>.</li>
<li>Y por último, <strong>y lo más importante</strong>, marcamos la casilla: <em>Active</em>.</li>
</ul>
<p>Guardamos los datos, y listo. Ahora solo tenemos que hacer un cambio en nuestro repositorio y esperar unos minutos a que <strong>Github</strong>, envie la notificación a <strong>Packagist</strong>.</p>    ]]></content>
</entry>
            <entry>
    <id>https://www.daguilar.dev/blog/databases_multiples-conexiones-a-bases-de-datos-con-laravel</id>
    <link type="text/html" rel="alternate" href="https://www.daguilar.dev/blog/databases_multiples-conexiones-a-bases-de-datos-con-laravel" />
    <title>Múltiples conexiones a bases de datos con Laravel</title>
    <published>2019-12-14T00:00:00+00:00</published>
    <updated>2019-12-14T00:00:00+00:00</updated>
    <author>
        <name>Damián Aguilar</name>
    </author>
    <summary type="html">Laravel permite realizar múltiples conexiones a bases de datos, independientemente del tipo de base de datos que sea (siempre que esté soportada por Laravel). 
Lo primero que tenemos que hacer, es definir estas conexiones. Para hacer esto, debemos ir a......</summary>
    <content type="html"><![CDATA[
        <p><strong>Laravel</strong> permite realizar múltiples conexiones a bases de datos, independientemente del tipo de base de datos que sea (siempre que esté soportada por Laravel). </p>
<p>Lo primero que tenemos que hacer, es definir estas conexiones. Para hacer esto, debemos ir a nuestro archivo de configuración:</p>
<pre><code class="language-bash">\config\database.php </code></pre>
<p>Allí debemos configurar nuestras conexiones. Veamos un ejemplo con conexiones a <code>mysql</code>:</p>
<pre><code class="language-php">'connections' =&gt; [

    'testing' =&gt; [
        'driver'   =&gt; 'sqlite',
        'database' =&gt; dirname(__DIR__).'/database/database.sqlite',
        'prefix'   =&gt; '',
        'foreign_key_constraints' =&gt; env('DB_FOREIGN_KEYS', true),
    ],

    'mysql_connect_1' =&gt; [
        'driver' =&gt; 'mysql',
        'host' =&gt; '127.0.0.1',
        'port' =&gt; '3306',
        'database' =&gt; 'forge_1',
        'username' =&gt; 'forge',
        'password' =&gt; '123456789_forge_1',
        'charset' =&gt; 'utf8mb4',
        'collation' =&gt; 'utf8mb4_unicode_ci',
        'prefix' =&gt; '',
        'prefix_indexes' =&gt; true,
        'strict' =&gt; true,
        'engine' =&gt; null,
    ],

    'mysql_connect_2' =&gt; [
        'driver' =&gt; 'mysql',
        'host' =&gt; '127.0.0.1',
        'port' =&gt; '3306',
        'database' =&gt; 'forge_2',
        'username' =&gt; 'forge',
        'password' =&gt; '123456789_forge_2',
        'charset' =&gt; 'utf8mb4',
        'collation' =&gt; 'utf8mb4_unicode_ci',
        'prefix' =&gt; '',
        'prefix_indexes' =&gt; true,
        'strict' =&gt; true,
        'engine' =&gt; null,
    ],
],</code></pre>
<p>O podemos hacerlo mediante el archivo <code>.env</code>:</p>
<pre><code class="language-bash">DB_CONNECTION_1=mysql
DB_HOST_1=127.0.0.1
DB_PORT_1=3306
DB_DATABASE_1=database_1
DB_USERNAME_1=root
DB_PASSWORD_1=123456789

DB_CONNECTION_2=mysql
DB_HOST_2=127.0.0.1
DB_PORT_2=3306
DB_DATABASE_2=database_2
DB_USERNAME_2=root
DB_PASSWORD_2=123456789</code></pre>
<p>Y su archivo de configuración:</p>
<pre><code class="language-php">'connections' =&gt; [

    'mysql_connect_1' =&gt; [
        'driver' =&gt; env('DB_CONNECTION_1', ''),
        'host' =&gt; env('DB_HOST_1', '127.0.0.1'),
        'port' =&gt; env('DB_PORT_1', '3306'),
        'database' =&gt; env('DB_DATABASE_1', 'forge'),
        'username' =&gt; env('DB_USERNAME_1', 'forge'),
        'password' =&gt; env('DB_PASSWORD_1', ''),
        'charset' =&gt; 'utf8mb4',
        'collation' =&gt; 'utf8mb4_unicode_ci',
        'prefix' =&gt; '',
        'prefix_indexes' =&gt; true,
        'strict' =&gt; true,
        'engine' =&gt; null,
    ],

    'mysql_connect_2' =&gt; [
        'driver' =&gt; env('DB_CONNECTION_2', ''),
        'host' =&gt; env('DB_HOST_2', '127.0.0.1'),
        'port' =&gt; env('DB_PORT_2', '3306'),
        'database' =&gt; env('DB_DATABASE_2', 'forge'),
        'username' =&gt; env('DB_USERNAME_2', 'forge'),
        'password' =&gt; env('DB_PASSWORD_2', ''),
        'charset' =&gt; 'utf8mb4',
        'collation' =&gt; 'utf8mb4_unicode_ci',
        'prefix' =&gt; '',
        'prefix_indexes' =&gt; true,
        'strict' =&gt; true,
        'engine' =&gt; null,
    ],
],</code></pre>
<h3>Migraciones</h3>
<p>Para gestionar migraciones en nuestras dos conexiones, debemos añadir <code>Schema::connection('connection_name')</code>:</p>
<pre><code class="language-php">public function up()

{
    Schema::connection('mysql_connect_1')-&gt;create('users', function (Blueprint $table) {

        $table-&gt;increments('id');
        $table-&gt;string('name');
        $table-&gt;string('email')-&gt;unique();
        $table-&gt;timestamp('email_verified_at')-&gt;nullable();
        $table-&gt;string('password');
        $table-&gt;rememberToken();
        $table-&gt;timestamps();

    });
}
</code></pre>
<p>O el otro ejemplo:</p>
<pre><code class="language-php">public function up()

{
    Schema::connection('mysql_connect_2')-&gt;create('profiles', function (Blueprint $table) {

        $table-&gt;increments('id');
        $table-&gt;integer('user_id')-&gt;unsigned()-&gt;index();
        $table-&gt;string('profile_address');
        $table-&gt;string('profile_avatar');
        $table-&gt;timestamps();

    });
}
</code></pre>
<h3>Desde el Modelo</h3>
<p>Podemos definir la base de datos que puede utilizar cada modelo:</p>
<pre><code class="language-php">namespace App;

use Illuminate\Database\Eloquent\Model;

class User extends Model
{
    protected $connection = 'mysql_connect_1';
}</code></pre>
<h3>Utilizando el: Query Builder</h3>
<p>También podemos especificar la conexión cuando hacemos una consulta a la base de datos, mediante un <em>query</em>:</p>
<pre><code class="language-php">DB::connection('mysql_connect_2')-&gt;table('profiles')-&gt;select('profile_address')-&gt;get();</code></pre>
<p>Veámoslo desde un <em>Controlador</em>:</p>
<pre><code class="language-php">namespace App\Http\Controllers;

use DB;
use Illuminate\Http\Request;

class UserController extends Controller
{
    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        $user = DB::connection('mysql_connect_1')-&gt;find($id);

        return view('dashboard.user', compact('user'));
    }
}</code></pre>
<p>Referencias:</p>
<ul>
<li><a href="https://fideloper.com/laravel-multiple-database-connections" class="link-out">Fideloper</a></li>
<li><a href="https://laracasts.com/discuss/channels/eloquent/laravel-5-multiple-database-connection" class="link-out">Laracast</a></li>
<li><a href="https://laraveldaily.com/multiple-database-connections-in-the-same-laravel-project/" class="link-out">Laraveldaily</a></li>
</ul>    ]]></content>
</entry>
            <entry>
    <id>https://www.daguilar.dev/blog/servers_alojando-sitios-estaticos-en-netlify</id>
    <link type="text/html" rel="alternate" href="https://www.daguilar.dev/blog/servers_alojando-sitios-estaticos-en-netlify" />
    <title>Alojando sitios estáticos en Netlify</title>
    <published>2019-12-08T00:00:00+00:00</published>
    <updated>2019-12-08T00:00:00+00:00</updated>
    <author>
        <name>Damián Aguilar</name>
    </author>
    <summary type="html">Netlify, es una plataforma que va más allá de ser un simple servicio de alojamiento estático para sitios web. Nos permite vincular nuestro repositorio (por ejemplo, de Github o Gitlab), de forma que nos permite una integración continua. 
Es decir,......</summary>
    <content type="html"><![CDATA[
        <p><a href="https://www.netlify.com/" class="link-out">Netlify</a>, es una plataforma que va más allá de ser un simple servicio de alojamiento estático para sitios web. Nos permite vincular nuestro repositorio (por ejemplo, de Github o Gitlab), de forma que nos permite una integración continua. </p>
<p>Es decir, cada vez que actualizamos nuestro repositorio, automáticamente, se actualiza nuestro proyecto alojado en <a href="https://www.netlify.com/">Netlify</a>.</p>
<p>Ofrece un servicio gratuito, para sitios pequeños (y estáticos), incluyendo:</p>
<ul>
<li>Dominio propio.</li>
<li>Gestión de DNS.</li>
<li>HTTPS.</li>
<li>Rollbacks.</li>
</ul>
<p>Si necesitamos bases de datos, formularios, etc... entonces vamos a tener que optar por otras soluciones.</p>
<p>A nivel personal, este blog se encuentra alojado en <a href="https://www.netlify.com/" class="link-out">Netlify</a>, y sinceramente, no tengo ninguna queja.</p>    ]]></content>
</entry>
            <entry>
    <id>https://www.daguilar.dev/blog/javascript_creando-enlaces-externos-con-javascript-de-forma-dinamica</id>
    <link type="text/html" rel="alternate" href="https://www.daguilar.dev/blog/javascript_creando-enlaces-externos-con-javascript-de-forma-dinamica" />
    <title>Creando enlaces externos con Javascript de forma dinámica</title>
    <published>2019-12-07T00:00:00+00:00</published>
    <updated>2019-12-07T00:00:00+00:00</updated>
    <author>
        <name>Damián Aguilar</name>
    </author>
    <summary type="html">En ocasiones, nos encontramos en la situación en la que necesitamos generar enlaces externos de forma dinámica. Por ejemplo, pensemos en un código &lt;code&gt;markdown&lt;/code&gt;, en el que queremos que nuestro enlace tenga el attributo &lt;code&gt;target&lt;/code&gt;, con......</summary>
    <content type="html"><![CDATA[
        <p>En ocasiones, nos encontramos en la situación en la que necesitamos generar enlaces externos de forma dinámica. Por ejemplo, pensemos en un código <code>markdown</code>, en el que queremos que nuestro enlace tenga el attributo <code>target</code>, con el valor <em>_blank</em>.</p>
<p>La forma más sencilla de hacerlo, es añadiendo a nuestro enlace una clase <code>css</code>(siempre que tengamos la versión extendida de <code>markdown</code>):</p>
<pre><code class="language-html">[Laravel](https://laravel.com/){.link-out}</code></pre>
<p>Con <code>markdown</code>, podemos añadir attributos con los corchetes:</p>
<pre><code class="language-html">[Laravel](https://laravel.com/){#myID .link-out}</code></pre>
<p>Que se renderizará en:</p>
<pre><code class="language-html">&lt;a href="https://laravel.com/" id="myID" class="link-out"&gt;Laravel&lt;/a&gt;</code></pre>
<p>Ahora, solo tenemos que añadir un poco de código <code>javascript</code> en nuestra página:</p>
<pre><code class="language-javascript">&lt;script&gt;
    document.addEventListener('DOMContentLoaded', function() {
        var linksTargetBlank = document.querySelectorAll('.link-out');
        for (var i = 0; i &lt; linksTargetBlank.length; i++) {
            linksTargetBlank[i].target = "_blank";
        }
    }, false);
&lt;/script&gt;</code></pre>
<p>Automáticamente, una vez que se cargue la página, añadirá el atritudo <code>target</code> con el valor <em>_blank</em>, a todos los enlaces con la clase <em>.link-out</em>.</p>    ]]></content>
</entry>
            <entry>
    <id>https://www.daguilar.dev/blog/php_actualizando-a-php-74-desde-mac</id>
    <link type="text/html" rel="alternate" href="https://www.daguilar.dev/blog/php_actualizando-a-php-74-desde-mac" />
    <title>Actualizando a php 7.4 desde Mac</title>
    <published>2019-12-03T00:00:00+00:00</published>
    <updated>2019-12-03T00:00:00+00:00</updated>
    <author>
        <name>Damián Aguilar</name>
    </author>
    <summary type="html">Ha salido la nueva versión de php: la versión 7.4 con grandes novedades. Destacando las arrow functions que llevaban siendo (desde hace tiempo), una reivindicación por parte de la comunidad php:

Podrás encontrar más informacion sobre las novedades,......</summary>
    <content type="html"><![CDATA[
        <p>Ha salido la nueva versión de php: la <strong>versión 7.4</strong> con grandes novedades. Destacando las <em>arrow functions</em> que llevaban siendo (desde hace tiempo), una reivindicación por parte de la comunidad php:</p>
<pre><code class="language-php">&lt;?php

$factor = 10;
$nums = array_map(fn($n) =&gt; $n * $factor, [1, 2, 3, 4]);
// $nums = array(10, 20, 30, 40);</code></pre>
<p>Podrás encontrar más informacion sobre las novedades, aquí: <a href="https://www.php.net/manual/es/migration74.new-features.php" class="link-out">php.net</a></p>
<p>En cualquier caso, la idea de este post era la de exponer mi experiencia al actualizar mi Mac, y explicar como lo he hecho, y sobre todo, que problemas he encontrado.</p>
<p>Partimos de la base, de que la gestión de mi servidor local la realizo a través de <a href="https://laravel.com/" class="link-out">Laravel valet</a>, y por tanto, solo he tenido que hacer esto:</p>
<pre><code class="language-bash">valet use php@7.4</code></pre>
<p>Automáticamente me ha indicado que no tenía instalada la versión 7.4, y la ha instalado directamente. </p>
<p>Admito que no ha sido mi primera tentativa, ya que anteriormente, había intentado instalarla utilizando <code>brew</code>... y no fue la mejor de las opciones, realmente, fue un auténtico desastre y no solo porque no me ha instaló la nueva versión, sino porque que me borró el archivo de configuración de mysql:</p>
<pre><code class="language-bash">/usr/local/etc/my.cnf.d</code></pre>
<p>Por lo que he tenido que crearlo de nuevo:</p>
<pre><code class="language-bash">mkdir /usr/local/etc/my.cnf.d</code></pre>
<p>Importante, no olvidar actualizar <code>valet</code> antes:</p>
<pre><code class="language-bash">composer global update &amp;&amp; valet install</code></pre>
<p>Otros usuarios, se han encontrado otros problemas, por ejemplo, <a href="https://laracasts.com/" class="link-out">Jeffrey Way</a>, ha tenido problemas con <code>ngix</code> y <code>dnsmasq</code>, y ha recomendado actualizarlos:</p>
<pre><code class="language-bash">brew upgrade nginx &amp;&amp; brew upgrade dnsmasq</code></pre>
<p>También recomienda eliminar versiones anteriores de <code>php</code>:</p>
<pre><code class="language-bash">brew unlink php@7.2</code></pre>
<p>En mi caso, lo hizo automáticamente <code>valet</code>...</p>
<p>En fin, creo que que si usas <strong>Mac</strong> y <strong>Laravel</strong>, lo mejor para actualizar <code>php</code> es hacerlo desde <code>valet</code>, o al menos, ha sido lo más sencillo para mi.</p>    ]]></content>
</entry>
            <entry>
    <id>https://www.daguilar.dev/blog/laravel_configurar-helpers-en-laravel</id>
    <link type="text/html" rel="alternate" href="https://www.daguilar.dev/blog/laravel_configurar-helpers-en-laravel" />
    <title>Configurar helpers en Laravel</title>
    <published>2019-11-15T00:00:00+00:00</published>
    <updated>2019-11-15T00:00:00+00:00</updated>
    <author>
        <name>Damián Aguilar</name>
    </author>
    <summary type="html">En ocasiones, podemos necesitar acceder a funciones (helpers), desde cualquier parte de nuestro código.
Laravel no dispone de esta funcionalidad por defecto, pero existen varias formas de configurar nuestra aplicación, para solucionar esto.
Antes de......</summary>
    <content type="html"><![CDATA[
        <p>En ocasiones, podemos necesitar acceder a funciones (<em>helpers</em>), desde cualquier parte de nuestro código.</p>
<p><strong>Laravel</strong> no dispone de esta funcionalidad por defecto, pero existen varias formas de configurar nuestra aplicación, para solucionar esto.</p>
<p>Antes de empezar con las diferentes opciones que tenemos, lo primero es crear un archivo donde alojar nuestras funciones o <em>helpers</em>, en mi caso, suelo tener el archivo aquí:</p>
<pre><code class="language-php">\App\Http\Helpers</code></pre>
<p>En este nuevo archivo: <code>Helpers.php</code>, añadiremos todos los métodos que necesitemos:</p>
<pre><code class="language-php">&lt;?php

if (! function_exists('userId')) {
    function userId() {
        return auth()-&gt;user()-&gt;id;
    }
}</code></pre>
<p>Ahora es cuando podemos elegir entre las diferentes opciones para poder tener acceso a los <em>helpers</em>.</p>
<h4>a) Mediante el archivo <code>composer.json</code></h4>
<p>Añadimos el campo <code>files</code>, con la ruta hacia nuestro archivo.</p>
<pre><code class="language-php">"autoload": {
    "psr-4": {
        "App\\": "app/"
    },
    "classmap": [
        "database/seeds",
        "database/factories"
    ],
    "files":[
        "app/Http/Helpers.php"
    ]
},</code></pre>
<p>Ahora solo nos falta actualizar <code>composer</code>, y ya estaría:</p>
<pre><code class="language-php">composer dump</code></pre>
<h4>b) Mediante un <em>Service Provider</em></h4>
<p>Crea un nuevo <em>Services Provider</em>, usando <code>artisan</code>:</p>
<p><code>artisan make:provider HelpersServiceProvider</code></p>
<p>El archivo se crea en la ruta:</p>
<p><code>\app\Providers\HelpersServiceProvider.php</code></p>
<p>Y en el archivo, en el método <code>register()</code>, añadimos:</p>
<pre><code class="language-php">public function register()
{
    require_once app_path() . '/Http/Helpers.php';
}</code></pre>
<p>Es decir, la ruta a nuestro archivo <code>helpers</code>.</p>
<p>Y ahora en el archivo:</p>
<p><code>config/app.php</code></p>
<p>Debemos añadir el nuevo <em>Service Provider</em> a la lista:</p>
<pre><code class="language-php">App\Providers\HelpersServiceProvider::class,</code></pre>
<p>De estas dos opciones, personalmente, prefiero la segunda, aunque ambas son igualmente válidas.</p>    ]]></content>
</entry>
            <entry>
    <id>https://www.daguilar.dev/blog/frameworks_migrando-el-blog-a-jigsaw</id>
    <link type="text/html" rel="alternate" href="https://www.daguilar.dev/blog/frameworks_migrando-el-blog-a-jigsaw" />
    <title>Migrando el blog a Jigsaw</title>
    <published>2019-11-07T00:00:00+00:00</published>
    <updated>2019-11-07T00:00:00+00:00</updated>
    <author>
        <name>Damián Aguilar</name>
    </author>
    <summary type="html">En 2015, empecé mi primer blog sobre programación. Fue en otro dominio, y con un CMS, que en aquel momento, me parecía una buena opción: AnchorCMS. No tardé mucho en cansarme de sus limitaciones, y empecé a modificarlo, y modificarlo, y terminó......</summary>
    <content type="html"><![CDATA[
        <p>En 2015, empecé mi primer blog sobre programación. Fue en otro dominio, y con un <strong>CMS</strong>, que en aquel momento, me parecía una buena opción: <a href="https://anchorcms.com/" class="link-out">AnchorCMS</a>. No tardé mucho en cansarme de sus limitaciones, y empecé a modificarlo, y modificarlo, y terminó siendo algo totalmente distinto, y durante algún tiempo funcionó. </p>
<p>Fue entonces cuando descubrí <a href="https://laravel.com" class="link-out">Laravel</a>, y decidí crear mi propio CMS. Durante los años, llegué a realizar dos desarrollos diferentes del blog, y al final, terminé por cansarme.</p>
<p>No fue hasta hace unos meses, cuando empecé a trastear con <em>frameworks</em> de desarrollo para sitios estáticos. </p>
<p>Mi primer encuentro con el mundo estático, fue con <a href="https://vuepress.vuejs.org/" class="link-out">Vuepress</a>, y la verdad es que no me gustó nada... ultimamente, cada vez me gusta menos <a href="https://vuejs.org/" class="link-out">Vuejs</a>, y después de este, probé algún que otro <em>frameworks</em> mas, pero ninguno de ellos terminaron por convencerme demasiado. </p>
<p>Había desistido, hasta que un artículo sobre <a href="https://jigsaw.tighten.co/" class="link-out">Jigsaw</a>, cayó en mis manos, y me decidí a probarlo... pasé una mañana de Sábado realizando las primeras pruebas, y aquello me gusto, era exáctamente lo que estaba buscando, y empecé a trabajar en el nuevo blog.</p>
<p><strong>A favor</strong>:</p>
<ul>
<li>Es un sistema basado en <code>php</code>, sigo sintiéndome mucho más cómodo aquí.</li>
<li>Utiliza <strong>Blade</strong> como gestor de plantillas... una maravilla, cuando llevas tanto tiempo trabajando con <strong>Laravel</strong>.</li>
<li><a href="https://tailwindcss.com/" class="link-out">Tailwindcss</a> como framework css. Ahora mismo, me parece imprescindible.</li>
<li>Compatible con <a href="https://www.netlify.com/" class="link-out">Netlify</a>, permitiendo <em>deploy</em> en tiempo real, desde <a href="https://github.com/" class="link-out">Github</a>.</li>
<li><em>Markdown</em> como formato de archivos.</li>
<li>Busqueda con <a href="https://www.algolia.com/" class="link-out">Angolia</a> integrada.</li>
<li>Desarrollo muy rápido.</li>
</ul>
<p><strong>En contra</strong>:</p>
<ul>
<li>Solo para programadores, ya que no dispone de un panel de administración para gestionar el sistema, no es un <strong>CMS</strong>.</li>
</ul>
<p>Si lo que buscas es un <strong>CMS</strong> con panel de administrador, aquí tienes algunas opciones: </p>
<ul>
<li><a href="https://wink.themsaid.com/" class="link-out">Wink</a> </li>
<li><a href="https://es.wordpress.com/" class="link-out">Wordpress</a></li>
</ul>    ]]></content>
</entry>
    </feed>
